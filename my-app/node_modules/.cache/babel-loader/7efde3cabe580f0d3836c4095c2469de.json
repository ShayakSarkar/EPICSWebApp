{"ast":null,"code":"var _jsxFileName = \"/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/components/doc_form_page/DocForm.js\";\nimport React from 'react';\nimport './DocForm.css';\nimport Disease from './Disease';\nimport Container from './Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DocForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patientDetails: {\n        'pat1@gmail.com': {\n          name: 'Shayak Sarkar',\n          age: 21,\n          blood_group: 'O-',\n          medical_history: {\n            disease1: {\n              medications: ['med1', 'med2', 'med3'],\n              avoid: ['av1', 'av2', 'av3']\n            },\n            disease2: {\n              medications: ['med1', 'med2', 'med3'],\n              avoid: ['av1', 'av2', 'av3']\n            }\n          },\n          current_medications: {\n            disease1: {\n              medications: [],\n              avoid: []\n            }\n          }\n        },\n        'pat2@gmail.com': {\n          name: 'Aditya Yadav',\n          age: 20,\n          blood_group: 'Z*',\n          medical_history: {},\n          current_medications: {\n            'erectile dysfunction': {\n              medications: ['viagra', 'porn'],\n              avoid: ['people in general', 'girls']\n            }\n          }\n        }\n      },\n      showPatientCard: false,\n      patientId: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:5000/get_patient_details', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(e => e.json()).then(function (e) {\n      this.setState({\n        patientDetails: e\n      });\n    });\n  }\n\n  showPatientDetails(event) {\n    event.preventDefault();\n    var patId = event.target.textContent;\n    console.log(patId);\n    console.log(this.state);\n    this.setState({\n      showPatientCard: true,\n      patientId: patId\n    });\n  }\n\n  addDisease(diseaseObj) {\n    var tempObj = this.state.patientDetails;\n    tempObj[this.state.patientId]['current_medications'][diseaseObj['name']] = {\n      medications: diseaseObj['medications'],\n      avoid: diseaseObj['avoid']\n    };\n    this.setState({\n      patientDetails: tempObj\n    });\n  }\n\n  removeDisease(diseaseName) {\n    var tempObj = this.state.patientDetails;\n    delete tempObj[this.state.patientId]['current_medications'][diseaseName];\n    this.setState({\n      patientDetails: tempObj\n    });\n  }\n\n  addMedication(diseaseName, medicine) {\n    console.log('DocForm.js: addMedication() ', diseaseName);\n    var tempObj = this.state.patientDetails;\n    tempObj[this.state.patientId]['current_medications'][diseaseName]['medications'].push(medicine);\n    this.setState({\n      patientDetails: tempObj\n    });\n  }\n\n  removeMedication(diseaseName, medicine) {\n    var tempObj = this.state.patientDetails;\n    var list = tempObj[this.state.patientId]['current_medications'][diseaseName]['medications'];\n    var newList = [];\n\n    for (var i in list) {\n      if (list[i] != medicine) {\n        newList.push(list[i]);\n      }\n    }\n\n    tempObj[this.state.patientId]['current_medications'][diseaseName]['medications'] = newList;\n    this.setState({\n      patientDetails: tempObj\n    });\n  }\n\n  addAvoid(diseaseName, avoid) {\n    var tempObj = this.state.patientDetails;\n    tempObj[this.state.patientId]['current_medications'][diseaseName]['avoid'].push(avoid);\n    this.setState({\n      patientDetails: tempObj\n    });\n  }\n\n  removeAvoid(diseaseName, avoid) {\n    var tempObj = this.state.patientDetails;\n    var newList = [];\n    var list = tempObj[this.state.patientId]['current_medications'][diseaseName]['avoid'];\n\n    for (var i in list) {\n      if (list[i] != avoid) {\n        newList.push(list[i]);\n      }\n    }\n\n    tempObj[this.state.patientId]['current_medications'][diseaseName]['avoid'] = newList;\n    this.setState({\n      patientDetails: tempObj\n    });\n  }\n\n  getPatientCard(patId) {\n    if (!patId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 20\n      }, this);\n    }\n\n    console.log('getPatientCard: patient id: ', patId);\n    var disList = [];\n\n    for (var key in this.state.patientDetails[patId]['medical_history']) {\n      disList.push(key);\n    }\n\n    function makeDiseaseDetail(details, name) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Disease Name: \", name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 37\n        }, this), \"Medications: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: details['medications'].map(e => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: e\n          }, e, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 52\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this), \"Things to Avoid: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: details['avoid'].map(e => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: e\n          }, e, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 46\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 20\n      }, this);\n    }\n\n    var medHistory = disList.map(dis => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: makeDiseaseDetail(this.state.patientDetails[patId]['medical_history'][dis], dis)\n    }, dis, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 41\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Name: \", this.state.patientDetails[patId]['name'], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 61\n      }, this), \"Age: \", this.state.patientDetails[patId]['age'], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 59\n      }, this), \"Blood Group: \", this.state.patientDetails[patId]['blood_group'], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 75\n      }, this), \"Medical History:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: medHistory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), \"Current Medications: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(Disease, {\n        currentDiseases: this.state.patientDetails[patId]['current_medications'],\n        addDisease: this.addDisease.bind(this),\n        removeDisease: this.removeDisease.bind(this),\n        addMedication: this.addMedication.bind(this),\n        removeMedication: this.removeMedication.bind(this),\n        addAvoid: this.addAvoid.bind(this),\n        removeAvoid: this.removeAvoid.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 16\n    }, this);\n  }\n\n  render() {\n    var patientIds = [];\n    /*\n        data is of the form:\n        data: [patid(email add): {\n                medical_history: [disease1:{\n                        medications: [med1,med2,med3].\n                        avoid: [av1,av2,av3]\n                    },\n                    disease2: {\n                        medicatiosn: [med1,med2,med3],\n                        avoid: [av1,av2,av3]\n                    }\n                ],\n                current_medications: [disease1: {\n                        medications: [],\n                        avoid: []\n                    },\n                    disease2: {\n                        medications: [],\n                        avoid: []\n                    },\n                ]\n            },\n            patid: ...,\n            patid: ...\n        ]\n    */\n\n    for (var key in this.state.patientDetails) {\n      patientIds.push(key);\n    }\n\n    var patientButtons = patientIds.map(id => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.showPatientDetails.bind(this),\n      className: \"PatientIdButton\",\n      children: id\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 47\n    }, this));\n    patientButtons = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: patientButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 24\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [patientButtons, /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: this.state.showPatientCard && 'block' || 'none'\n        },\n        children: this.getPatientCard(this.state.patientId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default DocForm;","map":{"version":3,"sources":["/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/components/doc_form_page/DocForm.js"],"names":["React","Disease","Container","DocForm","Component","constructor","props","state","patientDetails","name","age","blood_group","medical_history","disease1","medications","avoid","disease2","current_medications","showPatientCard","patientId","componentDidMount","fetch","method","credentials","then","e","json","setState","showPatientDetails","event","preventDefault","patId","target","textContent","console","log","addDisease","diseaseObj","tempObj","removeDisease","diseaseName","addMedication","medicine","push","removeMedication","list","newList","i","addAvoid","removeAvoid","getPatientCard","disList","key","makeDiseaseDetail","details","map","medHistory","dis","bind","render","patientIds","patientButtons","id","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './DocForm.css';\nimport Disease from './Disease';\nimport Container from './Container';\n\nclass DocForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            patientDetails:{\n                'pat1@gmail.com': {\n                    name: 'Shayak Sarkar',\n                    age: 21,\n                    blood_group: 'O-',\n                    medical_history: {\n                        disease1:{\n                            medications: ['med1','med2','med3'],\n                            avoid: ['av1','av2','av3']\n                        },\n                        disease2: {\n                            medications: ['med1','med2','med3'],\n                            avoid: ['av1','av2','av3']\n                        }\n                    },\n                    current_medications:{\n                        disease1: {\n                            medications: [],\n                            avoid: []\n                        },\n                    }\n                },\n                'pat2@gmail.com': {\n                    name: 'Aditya Yadav',\n                    age: 20,\n                    blood_group: 'Z*',\n                    medical_history: {},\n                    current_medications: {\n                        'erectile dysfunction': {\n                            medications: ['viagra','porn'],\n                            avoid: ['people in general','girls']\n                        }\n                    }\n                }\n            },\n            showPatientCard: false,\n            patientId: null\n        };\n    }\n    componentDidMount(){\n        fetch('http://localhost:5000/get_patient_details',{\n            method: 'GET',\n            credentials: 'include'\n        })\n        .then(e=>e.json())\n        .then(function(e){\n            this.setState({\n                patientDetails: e\n            })\n        });\n    }\n    showPatientDetails(event){\n        event.preventDefault();\n        var patId=event.target.textContent;\n        console.log(patId);\n        console.log(this.state);\n        this.setState({\n            showPatientCard: true,\n            patientId: patId\n        })\n    }\n    addDisease(diseaseObj){\n        var tempObj=this.state.patientDetails;\n        tempObj[this.state.patientId]['current_medications'][diseaseObj['name']]={\n            medications: diseaseObj['medications'],\n            avoid: diseaseObj['avoid']\n        };\n        this.setState({\n            patientDetails: tempObj\n        });\n    }\n    removeDisease(diseaseName){\n        var tempObj=this.state.patientDetails;\n        delete tempObj[this.state.patientId]['current_medications'][diseaseName]\n        this.setState({\n            patientDetails: tempObj\n        });\n    }\n    addMedication(diseaseName,medicine){\n        console.log('DocForm.js: addMedication() ',diseaseName);\n        var tempObj=this.state.patientDetails;\n        tempObj[this.state.patientId]['current_medications'][diseaseName]['medications'].push(medicine);\n        this.setState({\n            patientDetails: tempObj\n        });\n    }\n    removeMedication(diseaseName,medicine){\n        var tempObj=this.state.patientDetails;\n        var list=tempObj[this.state.patientId]['current_medications'][diseaseName]['medications'];\n        var newList=[];\n        for(var i in list){\n            if(list[i]!=medicine){\n                newList.push(list[i]);\n            }\n        }\n        tempObj[this.state.patientId]['current_medications'][diseaseName]['medications']=newList;\n        this.setState({\n            patientDetails: tempObj\n        });\n    }\n    addAvoid(diseaseName,avoid){\n        var tempObj=this.state.patientDetails;\n        tempObj[this.state.patientId]['current_medications'][diseaseName]['avoid'].push(avoid);\n        this.setState({\n            patientDetails: tempObj\n        });\n    }\n    removeAvoid(diseaseName,avoid){\n        var tempObj=this.state.patientDetails;\n        var newList=[];\n        var list=tempObj[this.state.patientId]['current_medications'][diseaseName]['avoid'];\n        for(var i in list){\n            if(list[i]!=avoid){\n                newList.push(list[i]);\n            }\n        }\n        tempObj[this.state.patientId]['current_medications'][diseaseName]['avoid']=newList;\n        this.setState({\n            patientDetails: tempObj\n        });\n    }\n    getPatientCard(patId){\n        if(!patId){\n            return <div></div>;\n        }\n        console.log('getPatientCard: patient id: ',patId);\n        var disList=[];\n        for(var key in this.state.patientDetails[patId]['medical_history']){\n            disList.push(key);\n        }\n        function makeDiseaseDetail(details,name){\n            return <div>\n                Disease Name: {name}<br/>\n                Medications: <br/>\n                <ul>\n                    {details['medications'].map(e=><li key={e}>{e}</li>)}\n                </ul>\n                Things to Avoid: <br/>\n                <ul>\n                    {details['avoid'].map(e=><li key={e}>{e}</li>)}\n                </ul>\n            </div>;\n        }\n        var medHistory=disList.map(dis=><li key={dis}>{makeDiseaseDetail(this.state.patientDetails[patId]['medical_history'][dis],dis)}</li>);\n        return <div>\n            Name: {this.state.patientDetails[patId]['name']}<br/>\n            Age: {this.state.patientDetails[patId]['age']}<br/>\n            Blood Group: {this.state.patientDetails[patId]['blood_group']}<br/>\n            Medical History:<br/>\n            <ul>\n                {medHistory}\n            </ul>\n            Current Medications: <br/>\n            <Disease currentDiseases={this.state.patientDetails[patId]['current_medications']}\n                addDisease={this.addDisease.bind(this)}\n                removeDisease={this.removeDisease.bind(this)}\n                addMedication={this.addMedication.bind(this)}\n                removeMedication={this.removeMedication.bind(this)}\n                addAvoid={this.addAvoid.bind(this)}\n                removeAvoid={this.removeAvoid.bind(this)}\n            />\n        </div>\n    }\n    render(){\n        var patientIds=[];\n        /*\n            data is of the form:\n            data: [patid(email add): {\n                    medical_history: [disease1:{\n                            medications: [med1,med2,med3].\n                            avoid: [av1,av2,av3]\n                        },\n                        disease2: {\n                            medicatiosn: [med1,med2,med3],\n                            avoid: [av1,av2,av3]\n                        }\n                    ],\n                    current_medications: [disease1: {\n                            medications: [],\n                            avoid: []\n                        },\n                        disease2: {\n                            medications: [],\n                            avoid: []\n                        },\n                    ]\n                },\n                patid: ...,\n                patid: ...\n            ]\n        */\n        for(var key in this.state.patientDetails){\n            patientIds.push(key);\n        }\n        var patientButtons=patientIds.map(id=><button key={id} onClick={this.showPatientDetails.bind(this)} className='PatientIdButton'>{id}</button>);\n        patientButtons=<ul>{patientButtons}</ul>\n        return <div>\n            {patientButtons}\n            <div style={{display: (this.state.showPatientCard && 'block') || 'none'}}>\n                {this.getPatientCard(this.state.patientId)}\n            </div>\n        </div>;\n    }\n}\nexport default DocForm;\n"]},"metadata":{},"sourceType":"module"}