{"ast":null,"code":"var _jsxFileName = \"/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/components/doc_form_page/DocForm.js\";\nimport React from 'react';\nimport './DocForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DocForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patientDetails: {\n        'pat1@gmail.com': {\n          name: 'Shayak Sarkar',\n          age: 21,\n          blood_group: 'O-',\n          medical_history: {\n            disease1: {\n              medications: ['med1', 'med2', 'med3'],\n              avoid: ['av1', 'av2', 'av3']\n            },\n            disease2: {\n              medications: ['med1', 'med2', 'med3'],\n              avoid: ['av1', 'av2', 'av3']\n            }\n          },\n          current_medications: {\n            disease1: {\n              medications: [],\n              avoid: []\n            }\n          }\n        },\n        'pat2@gmail.com': {}\n      },\n      showPatientCard: false,\n      patientId: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:5000/get_patient_details', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(e => e.json()).then(function (e) {\n      this.setState({\n        patientDetails: e\n      });\n    });\n  }\n\n  showPatientDetails(event) {\n    event.preventDefault();\n    var patId = event.target.textContent;\n    console.log(patId);\n    console.log(this.state);\n    this.setState({\n      showPatientCard: true,\n      patientId: patId\n    });\n  }\n\n  getPatientCard(patId) {\n    if (!patId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 20\n      }, this);\n    }\n\n    console.log('getPatientCard: patient id: ', patId);\n    var disList = [];\n\n    for (var key in this.state.patientDetails[patId]['medical_history']) {\n      disList.push(key);\n    }\n\n    function makeDiseaseDetail(details, name) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Disease Name: \", name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 37\n        }, this), \"Medications: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: details['medications'].map(e => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: e\n          }, e, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 52\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), \"Things to Avoid: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: details['avoid'].map(e => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: e\n          }, e, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 46\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 20\n      }, this);\n    }\n\n    var medHistory = disList.map(dis => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: makeDiseaseDetail(this.state.patientDetails[patId]['medical_history'][dis], dis)\n    }, dis, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 41\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Name: \", this.state.patientDetails[patId]['name'], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 61\n      }, this), \"Age: \", this.state.patientDetails[patId]['age'], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 59\n      }, this), \"Blood Group: \", this.state.patientDetails[patId]['blood_group'], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 75\n      }, this), \"Medical History:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: medHistory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 16\n    }, this);\n  }\n\n  render() {\n    var patientIds = [];\n    /*\n        data is of the form:\n        data: [patid(email add): {\n                medical_history: [disease1:{\n                        medications: [med1,med2,med3].\n                        avoid: [av1,av2,av3]\n                    },\n                    disease2: {\n                        medicatiosn: [med1,med2,med3],\n                        avoid: [av1,av2,av3]\n                    }\n                ],\n                current_medications: [disease1: {\n                        medications: [],\n                        avoid: []\n                    },\n                    disease2: {\n                        medications: [],\n                        avoid: []\n                    },\n                ]\n            },\n            patid: ...,\n            patid: ...\n        ]\n    */\n\n    for (var key in this.state.patientDetails) {\n      patientIds.push(key);\n    }\n\n    var patientButtons = patientIds.map(id => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.showPatientDetails.bind(this),\n      className: \"PatientIdButton\",\n      children: id\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 47\n    }, this));\n    patientButtons = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: patientButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 24\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [patientButtons, /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: this.state.showPatientCard && 'block' || 'none'\n        },\n        children: this.getPatientCard(this.state.patientId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default DocForm;","map":{"version":3,"sources":["/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/components/doc_form_page/DocForm.js"],"names":["React","DocForm","Component","constructor","props","state","patientDetails","name","age","blood_group","medical_history","disease1","medications","avoid","disease2","current_medications","showPatientCard","patientId","componentDidMount","fetch","method","credentials","then","e","json","setState","showPatientDetails","event","preventDefault","patId","target","textContent","console","log","getPatientCard","disList","key","push","makeDiseaseDetail","details","map","medHistory","dis","render","patientIds","patientButtons","id","bind","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './DocForm.css';\n\nclass DocForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            patientDetails:{\n                'pat1@gmail.com': {\n                    name: 'Shayak Sarkar',\n                    age: 21,\n                    blood_group: 'O-',\n                    medical_history: {\n                        disease1:{\n                            medications: ['med1','med2','med3'],\n                            avoid: ['av1','av2','av3']\n                        },\n                        disease2: {\n                            medications: ['med1','med2','med3'],\n                            avoid: ['av1','av2','av3']\n                        }\n                    },\n                    current_medications:{\n                        disease1: {\n                            medications: [],\n                            avoid: []\n                        },\n                    }\n                },\n                'pat2@gmail.com': {}\n            },\n            showPatientCard: false,\n            patientId: null\n        };\n    }\n    componentDidMount(){\n        fetch('http://localhost:5000/get_patient_details',{\n            method: 'GET',\n            credentials: 'include'\n        })\n        .then(e=>e.json())\n        .then(function(e){\n            this.setState({\n                patientDetails: e\n            })\n        });\n    }\n    showPatientDetails(event){\n        event.preventDefault();\n        var patId=event.target.textContent;\n        console.log(patId);\n        console.log(this.state);\n        this.setState({\n            showPatientCard: true,\n            patientId: patId\n        })\n    }\n    getPatientCard(patId){\n        if(!patId){\n            return <div></div>;\n        }\n        console.log('getPatientCard: patient id: ',patId);\n        var disList=[];\n        for(var key in this.state.patientDetails[patId]['medical_history']){\n            disList.push(key);\n        }\n        function makeDiseaseDetail(details,name){\n            return <div>\n                Disease Name: {name}<br/>\n                Medications: <br/>\n                <ul>\n                    {details['medications'].map(e=><li key={e}>{e}</li>)}\n                </ul>\n                Things to Avoid: <br/>\n                <ul>\n                    {details['avoid'].map(e=><li key={e}>{e}</li>)}\n                </ul>\n            </div>;\n        }\n        var medHistory=disList.map(dis=><li key={dis}>{makeDiseaseDetail(this.state.patientDetails[patId]['medical_history'][dis],dis)}</li>);\n        return <div>\n            Name: {this.state.patientDetails[patId]['name']}<br/>\n            Age: {this.state.patientDetails[patId]['age']}<br/>\n            Blood Group: {this.state.patientDetails[patId]['blood_group']}<br/>\n            Medical History:<br/>\n            <ul>\n                {medHistory}\n            </ul>\n        </div>\n    }\n    render(){\n        var patientIds=[];\n        /*\n            data is of the form:\n            data: [patid(email add): {\n                    medical_history: [disease1:{\n                            medications: [med1,med2,med3].\n                            avoid: [av1,av2,av3]\n                        },\n                        disease2: {\n                            medicatiosn: [med1,med2,med3],\n                            avoid: [av1,av2,av3]\n                        }\n                    ],\n                    current_medications: [disease1: {\n                            medications: [],\n                            avoid: []\n                        },\n                        disease2: {\n                            medications: [],\n                            avoid: []\n                        },\n                    ]\n                },\n                patid: ...,\n                patid: ...\n            ]\n        */\n        for(var key in this.state.patientDetails){\n            patientIds.push(key);\n        }\n        var patientButtons=patientIds.map(id=><button key={id} onClick={this.showPatientDetails.bind(this)} className='PatientIdButton'>{id}</button>);\n        patientButtons=<ul>{patientButtons}</ul>\n        return <div>\n            {patientButtons}\n            <div style={{display: (this.state.showPatientCard && 'block') || 'none'}}>\n                {this.getPatientCard(this.state.patientId)}\n            </div>\n        </div>;\n    }\n}\nexport default DocForm;\n"]},"metadata":{},"sourceType":"module"}