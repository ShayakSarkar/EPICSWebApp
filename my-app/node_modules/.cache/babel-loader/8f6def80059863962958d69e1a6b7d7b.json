{"ast":null,"code":"var _jsxFileName = \"/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/components/hosp_details_page/HospForm.js\";\nimport React from 'react';\nimport './HospForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HospForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.location = null;\n\n    function setLocation(e) {\n      console.log('setLocation: ', e);\n      this.location = {\n        'latitude': e.coords.latitude,\n        'longitude': e.coords.longitude\n      };\n    }\n\n    this.featureOptions = ['bed', 'ICU', 'doctors', 'nurses'];\n    this.state = {\n      selectedFeatures: [],\n      featureMap: {},\n      fetchedData: false\n    };\n    window.navigator.geolocation.getCurrentPosition(setLocation.bind(this), console.log);\n    console.log(this.location);\n  }\n\n  componentDidMount() {\n    console.log('component mounted');\n    fetch('http://localhost:5000/get_hospital_details/', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(function (e) {\n      return e.json();\n    }).then(e => {\n      console.log('receieved: ', e);\n      var selectedFeatures = [];\n      var featureMap = {};\n\n      for (var key in e) {\n        if (this.featureOptions.includes(key)) {\n          selectedFeatures.push(key);\n          featureMap[key] = e[key];\n        }\n      }\n\n      document.querySelector('input[name=address]').value = e['address'];\n      this.setState({\n        featureMap: featureMap,\n        selectedFeatures: selectedFeatures\n      });\n    }).catch(function (e) {\n      console.log(e);\n    });\n  }\n\n  addFeature(event) {\n    event.preventDefault();\n    console.log(document.querySelector('select[name=feature' + this.state.selectedFeatures.length + ']').value);\n    console.log(document.querySelector('input[name=feature' + this.state.selectedFeatures.length + ']').value);\n    var newFeature = document.querySelector('select[name=feature' + this.state.selectedFeatures.length + ']').value;\n    var newValue = document.querySelector('input[name=feature' + this.state.selectedFeatures.length + ']').value;\n    var tempMap = this.state.featureMap;\n    var tempList = this.state.selectedFeatures;\n    tempList.push(newFeature);\n    tempMap[newFeature] = newValue;\n    this.setState({\n      featureMap: tempMap,\n      selectedFeatures: tempList\n    });\n  }\n\n  sendData(event) {\n    event.preventDefault();\n    var data = this.state.featureMap;\n    data['location'] = this.location;\n    data['address'] = document.querySelector('input[name=address]').value;\n    fetch('http://localhost:5000/send_hospital_details/', {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify(data)\n    }).then(response => console.log(response)).catch(e => {\n      console.log(e);\n    });\n  }\n\n  removeFeature(event) {\n    event.preventDefault();\n    console.log('removing ', event.target.value);\n    var feature = event.target.value;\n    var tempList = [];\n    var tempMap = this.state.featureMap;\n\n    for (var i in this.state.selectedFeatures.length) {\n      if (this.state.selectedFeatures[i] !== feature) {\n        tempList.push(this.state.selectedFeatures[i]);\n      }\n    }\n\n    delete tempMap[feature];\n    this.setState({\n      featureMap: tempMap,\n      selectedFeatures: tempList\n    });\n  }\n\n  render() {\n    var options = this.featureOptions.map(feature => {\n      if (!this.state.selectedFeatures.includes(feature)) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: feature\n        }, feature, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 24\n        }, this);\n      }\n    });\n    console.log(options);\n    var ctr = 1;\n    var setFeatures = this.state.selectedFeatures.map(feature => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [feature, \"-->\", this.state.featureMap[feature], /*#__PURE__*/_jsxDEV(\"button\", {\n          value: 'feature' + ctr++,\n          onClick: this.removeFeature.bind(this),\n          children: \"remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 88\n        }, this)]\n      }, 'feature' + ct, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 20\n      }, this);\n    });\n    setFeatures.map(i => {\n      console.log(i.key);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Address\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 55\n      }, this), setFeatures, /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"feature\" + this.state.selectedFeatures.length,\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: 'feature' + this.state.selectedFeatures.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addFeature.bind(this),\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 70\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.sendData.bind(this),\n        children: \"Send Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default HospForm;","map":{"version":3,"sources":["/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/components/hosp_details_page/HospForm.js"],"names":["React","HospForm","Component","constructor","props","location","setLocation","e","console","log","coords","latitude","longitude","featureOptions","state","selectedFeatures","featureMap","fetchedData","window","navigator","geolocation","getCurrentPosition","bind","componentDidMount","fetch","method","credentials","then","json","key","includes","push","document","querySelector","value","setState","catch","addFeature","event","preventDefault","length","newFeature","newValue","tempMap","tempList","sendData","data","body","JSON","stringify","response","removeFeature","target","feature","i","render","options","map","ctr","setFeatures","ct"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './HospForm.css';\n\nclass HospForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.location=null;\n        function setLocation(e){\n            console.log('setLocation: ',e);\n            this.location={'latitude':e.coords.latitude,'longitude':e.coords.longitude};\n        }\n        this.featureOptions=['bed','ICU','doctors','nurses'];\n        this.state={\n            selectedFeatures: [],\n            featureMap: {},\n            fetchedData: false\n        };\n        window.navigator.geolocation.getCurrentPosition(setLocation.bind(this),console.log);\n        console.log(this.location);\n    }\n    componentDidMount(){\n        console.log('component mounted');\n        fetch('http://localhost:5000/get_hospital_details/',{\n            method: 'GET',\n            credentials: 'include'\n        })\n        .then(function(e){\n            return e.json();\n        })\n        .then((e)=>{\n            console.log('receieved: ',e)\n            var selectedFeatures=[]\n            var featureMap={}\n            for(var key in e){\n                if(this.featureOptions.includes(key)){\n                    selectedFeatures.push(key)\n                    featureMap[key]=e[key]                    \n                }\n            }\n            document.querySelector('input[name=address]').value=e['address']\n            this.setState({\n                featureMap: featureMap,\n                selectedFeatures: selectedFeatures\n            });\n        })\n        .catch(function(e){\n            console.log(e)\n        });\n    }\n    addFeature(event){\n        event.preventDefault();\n        console.log(document.querySelector('select[name=feature'+this.state.selectedFeatures.length+']').value); \n        console.log(document.querySelector('input[name=feature'+this.state.selectedFeatures.length+']').value);\n        var newFeature=document.querySelector('select[name=feature'+this.state.selectedFeatures.length+']').value; \n        var newValue=document.querySelector('input[name=feature'+this.state.selectedFeatures.length+']').value;\n        var tempMap=this.state.featureMap;\n        var tempList=this.state.selectedFeatures;\n        tempList.push(newFeature);\n        tempMap[newFeature]=newValue;\n        this.setState({\n            featureMap: tempMap,\n            selectedFeatures: tempList\n        });\n    }\n    sendData(event){\n        event.preventDefault();\n        var data=this.state.featureMap;\n        data['location']=this.location;\n        data['address']=document.querySelector('input[name=address]').value;\n        fetch('http://localhost:5000/send_hospital_details/',{\n            method: 'POST',\n            credentials: 'include',\n            body: JSON.stringify(data)\n        })\n        .then((response)=>console.log(response))\n        .catch(e=>{console.log(e)});\n    }\n    removeFeature(event){\n        event.preventDefault();\n        console.log('removing ',event.target.value);\n        var feature=event.target.value;\n        var tempList=[];\n        var tempMap=this.state.featureMap;\n        for(var i in this.state.selectedFeatures.length){\n            if(this.state.selectedFeatures[i]!==feature){\n                tempList.push(this.state.selectedFeatures[i]);\n            }\n        }\n        delete tempMap[feature];\n        this.setState({\n            featureMap: tempMap,\n            selectedFeatures: tempList\n        });\n    }\n    render(){\n        var options=this.featureOptions.map((feature)=>{\n            if(!this.state.selectedFeatures.includes(feature)){\n                return <option key={feature}>{feature}</option>\n            }\n        });\n        console.log(options);\n        var ctr=1;\n        var setFeatures=this.state.selectedFeatures.map((feature)=>{\n            return <div key={'feature'+ct}>{feature}-->{this.state.featureMap[feature]}<button value={'feature'+(ctr++)} onClick={this.removeFeature.bind(this)}>remove</button></div>;\n        });\n        setFeatures.map(i=>{console.log(i.key)});\n        return <div>\n            Address<input type=\"text\" name='address'/><br/>\n            {setFeatures}\n            <select name={\"feature\"+this.state.selectedFeatures.length}>\n                {options}\n            </select>\n            <input type=\"text\" name={'feature'+this.state.selectedFeatures.length}/>\n            <button onClick={this.addFeature.bind(this)}>add</button><br/>\n            <button onClick={this.sendData.bind(this)}>Send Details</button>\n        </div>\n    }\n}\nexport default HospForm;\n"]},"metadata":{},"sourceType":"module"}