[{"/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/index.js":"1","/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/App.js":"2","/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/reportWebVitals.js":"3","/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/components/login_signup_page/Form.js":"4","/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/components/login_signup_page/FormOption.js":"5","/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/components/hosp_details_page/HospForm.js":"6","/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/components/doc_form_page/DocForm.js":"7","/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/components/doc_form_page/Disease.js":"8","/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/components/doc_form_page/Container.js":"9"},{"size":500,"mtime":1621654149430,"results":"10","hashOfConfig":"11"},{"size":726,"mtime":1622045977709,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1621654149430,"results":"13","hashOfConfig":"11"},{"size":6864,"mtime":1622053630506,"results":"14","hashOfConfig":"11"},{"size":679,"mtime":1621784665577,"results":"15","hashOfConfig":"11"},{"size":4657,"mtime":1622092788880,"results":"16","hashOfConfig":"11"},{"size":6965,"mtime":1622057482119,"results":"17","hashOfConfig":"11"},{"size":2937,"mtime":1622095942300,"results":"18","hashOfConfig":"11"},{"size":959,"mtime":1622052998445,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ce0tvq",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/index.js",[],["44","45"],"/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/App.js",["46","47"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Form from './components/login_signup_page/Form';\nimport HospForm from './components/hosp_details_page/HospForm';\nimport DocForm from './components/doc_form_page/DocForm';\nimport {BrowserRouter as Router,\n  Switch,\n  Link,\n  Route  \n} from 'react-router-dom';\n\nclass App extends React.Component{\n  render(){\n    return <Router>\n      <Switch>\n        <Route exact path={['/login','/doc_login']}>\n          <Form/>\n        </Route>\n        <Route exact path='/hosp_form'>\n          <HospForm/>\n        </Route>\n        <Route exact path='/doc_form'>\n          <DocForm/>\n        </Route>\n      </Switch>\n    </Router>\n  }\n}\nexport default App;","/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/reportWebVitals.js",[],"/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/components/login_signup_page/Form.js",["48"],"import React from 'react';\nimport axios from 'axios';\nimport FormOption from './FormOption';\nimport './Form.css';\n\nvar verylightblue='#e6fcfc';\n\nclass Form extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            loginSelected: false,\n            passwordValid: false,\n            loginError: false,\n            signupError: false\n        };\n    }\n    selectLogin(){\n        this.setState({\n            loginSelected: true,\n            signupError: false\n        });\n    }\n    selectSignup(){\n        this.setState({\n            loginSelected: false,\n            loginError: false\n        });\n    }\n    signup(event){\n        event.preventDefault();\n        if(!this.state.passwordValid){\n            console.log('entries not valid');\n            return;\n        }\n        var signupStatus=null;\n        var fetchURL=null;\n        if(window.location.href==='http://localhost:3000/doc_login/'){\n            fetchURL='http://localhost:5000/doc_signup/';\n        }\n        else{\n            fetchURL='http://localhost:5000/signup/';\n        }\n        fetch(fetchURL,{\n            method: 'POST',    \n            credentials: 'include',\n            body: JSON.stringify({\n                'username': document.querySelector('input[name=email]').value,\n                'password': document.querySelector('input[name=password]').value\n            })\n        })\n        .then((response)=>{console.log(response);return response.json()})\n        .then((param)=>{\n            signupStatus=param;\n            console.log('login_status: ',signupStatus);\n            if(signupStatus['message']==='success' && window.location.href==='http://localhost:3000/login/'){\n                window.location.assign('http://localhost:3000/hosp_form/');\n            }\n            else if(signupStatus['message']==='success' && window.location.href==='http://localhost:3000/doc_login/'){\n                window.location.assign('http://localhost:3000/doc_form/');\n            }\n            else{\n                this.setState({\n                    signupError: true\n                });\n            }\n        })\n        .catch(e=>{console.log(e)});\n    }\n    login(event){\n        event.preventDefault();\n        if(document.querySelector('input[name=email]').value===''){\n            console.log('entries not valid');\n            return;\n        }\n        var loginStatus=null;\n        var fetchURL=null;\n        if(window.location.href==='http://localhost:3000/doc_login/'){\n            fetchURL='http://localhost:5000/doc_login/';\n        }\n        else{\n            fetchURL='http://localhost:5000/login/';\n        }\n        fetch(fetchURL,{\n            method: 'POST',\n            credentials: 'include',\n            body: JSON.stringify({\n                'username': document.querySelector('input[name=email]').value,\n                'password': document.querySelector('input[name=password]').value\n            })\n        })\n        .then((response)=>response.json())\n        .then((param)=>{\n            loginStatus=param;\n            console.log('login_status: ',loginStatus);\n            if(loginStatus['message']==='success' && window.location.href==='http://localhost:3000/login/'){\n                window.location.assign('http://localhost:3000/hosp_form/');\n            }\n            else if(loginStatus['message']==='success' && window.location.href==='http://localhost:3000/doc_login/'){\n                window.location.assign('http://localhost:3000/doc_form/');\n            }\n            else{\n                this.setState({\n                    loginError: true\n                });\n            }\n        })\n        .catch(e=>{console.log(e)});\n        console.log('logging in ',document.querySelector('input[name=email]').value,document.querySelector('input[name=password]').value);\n    }\n    checkPass(){\n        var temp=document.querySelector('input[name=password]').value===document.querySelector('input[name=confirmation]').value;\n        console.log(temp);\n        console.log(document.querySelector('input[name=password]').value);\n        console.log(document.querySelector('input[name=confirmation]').value);\n        this.setState({\n            passwordValid: temp && document.querySelector('input[name=password]').value!==''\n        });\n        return this.state.passwordValid;\n    }\n    render(){\n        return <form>\n                <FormOption text=\"Login\" \n                    height=\"5%\" \n                    width=\"37%\"\n                    left=\"5%\"\n                    top=\"2%\"\n                    padding=\"3%\"\n                    backgroundColor={(this.state.loginSelected && verylightblue) || 'white'}\n                    onClick={this.selectLogin.bind(this)}\n                >\n                </FormOption>\n                <FormOption text=\"Sign Up\" \n                    height=\"5%\" \n                    width=\"37%\"\n                    left=\"50%\"\n                    top=\"2%\"\n                    padding=\"3%\"\n                    backgroundColor={(!this.state.loginSelected && verylightblue) || 'white'}\n                    onClick={this.selectSignup.bind(this)}\n                >\n                </FormOption>\n                <div className=\"ErrorMessage\" style={{display: (!this.state.loginError && 'none') || 'block'}}> Error in logging in</div>\n                <div className=\"ErrorMessage\" style={{display: (!this.state.signupError && 'none') || 'block'}}> Error in signing up</div>\n                <label id=\"lb1\">Email ID <input type=\"text\" placeholder=\"email@gmail.com\" name=\"email\"/></label>\n                <label id=\"lb2\">Password <input onChange={this.checkPass.bind(this)} type=\"password\" placeholder=\"password\" name=\"password\"/></label>\n                <label id=\"lb3\" style={{\n                        display: (this.state.loginSelected && 'none') || 'block',\n                    }}\n                >\n                    Confirmation \n                    <input onChange={this.checkPass.bind(this)} type=\"password\" placeholder=\"confirm password\" name=\"confirmation\" style={{\n                            border: ((this.state.passwordEmpty || !this.state.passwordValid) && '3px solid red') || 'none'\n                        }}\n                    />\n                </label>\n                <button className=\"SignupButton\" style={{\n                       display: ((this.state.loginSelected) && 'none') || 'block'\n                    }}\n                    onClick={this.signup.bind(this)}\n                >\n                    Sign Up\n                </button>\n                <button className=\"LoginButton\" style={{\n                        display: ((!this.state.loginSelected) && 'none') || 'block'\n                    }}\n                    onClick={this.login.bind(this)}\n                >\n                    Log In\n                </button>\n            </form>;\n    }\n}\nexport default Form;\n","/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/components/login_signup_page/FormOption.js",["49"],"import React from 'react';\nimport './FormOption.css';\n\nclass FormOption extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return <div className=\"FormOption\"\n            style={{\n                height: this.props.height || '1%',\n                width: this.props.width || '1%',\n                left: this.props.left || '1%',\n                top: this.props.top || '1%',\n                padding: this.props.padding || '1%',\n                backgroundColor: this.props.backgroundColor\n            }}\n            onClick={this.props.onClick}\n        >\n            {this.props.text}\n        </div>;\n    }\n}\nexport default FormOption;\n","/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/components/hosp_details_page/HospForm.js",[],"/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/components/doc_form_page/DocForm.js",["50","51","52"],"import React from 'react';\nimport './DocForm.css';\nimport Disease from './Disease';\nimport Container from './Container';\n\nclass DocForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            patientDetails:{},\n            showPatientCard: false,\n            patientId: null\n        };\n    }\n    componentDidMount(){\n        fetch('http://localhost:5000/get_patient_details/',{\n            method: 'GET',\n            credentials: 'include'\n        })\n        .then(e=>e.json())\n        .then(function(e){\n            console.log('DocForm.js: componentDidMount(): ',e);\n            this.setState({\n                patientDetails: e['patient_details']\n            });\n        }.bind(this));\n    }\n    showPatientDetails(event){\n        event.preventDefault();\n        var patId=event.target.textContent;\n        console.log(patId);\n        console.log(this.state);\n        this.setState({\n            showPatientCard: true,\n            patientId: patId\n        })\n    }\n    addDisease(diseaseObj){\n        var tempObj=this.state.patientDetails;\n        console.log('DocForm.js: addDisease():',diseaseObj);\n        tempObj[this.state.patientId]['current_medications'][diseaseObj['name']]={\n            medications: diseaseObj['medications'],\n            avoid: diseaseObj['avoid']\n        };\n        this.setState({\n            patientDetails: tempObj\n        });\n    }\n    removeDisease(diseaseName){\n        var tempObj=this.state.patientDetails;\n        delete tempObj[this.state.patientId]['current_medications'][diseaseName]\n        this.setState({\n            patientDetails: tempObj\n        });\n    }\n    addMedication(diseaseName,medicine){\n        console.log('DocForm.js: addMedication() ',diseaseName);\n        console.log('DocForm.js: addMedication() medicine =',medicine);\n        var tempObj=this.state.patientDetails;\n        tempObj[this.state.patientId]['current_medications'][diseaseName]['medications'].push(medicine);\n        this.setState({\n            patientDetails: tempObj\n        });\n    }\n    removeMedication(diseaseName,medicine){\n        var tempObj=this.state.patientDetails;\n        var list=tempObj[this.state.patientId]['current_medications'][diseaseName]['medications'];\n        var newList=[];\n        for(var i in list){\n            if(list[i]!=medicine){\n                newList.push(list[i]);\n            }\n        }\n        tempObj[this.state.patientId]['current_medications'][diseaseName]['medications']=newList;\n        this.setState({\n            patientDetails: tempObj\n        });\n    }\n    addAvoid(diseaseName,avoid){\n        var tempObj=this.state.patientDetails;\n        tempObj[this.state.patientId]['current_medications'][diseaseName]['avoid'].push(avoid);\n        this.setState({\n            patientDetails: tempObj\n        });\n    }\n    removeAvoid(diseaseName,avoid){\n        var tempObj=this.state.patientDetails;\n        var newList=[];\n        var list=tempObj[this.state.patientId]['current_medications'][diseaseName]['avoid'];\n        for(var i in list){\n            if(list[i]!=avoid){\n                newList.push(list[i]);\n            }\n        }\n        tempObj[this.state.patientId]['current_medications'][diseaseName]['avoid']=newList;\n        this.setState({\n            patientDetails: tempObj\n        });\n    }\n    getPatientCard(patId){\n        if(!patId){\n            return <div></div>;\n        }\n        console.log('getPatientCard: patient id: ',patId);\n        var disList=[];\n        for(var key in this.state.patientDetails[patId]['medical_history']){\n            disList.push(key);\n        }\n        function makeDiseaseDetail(details,name){\n            return <div>\n                Disease Name: {name}<br/>\n                Medications: <br/>\n                <ul>\n                    {details['medications'].map((e)=><li key={e}>{e}</li>)}\n                </ul>\n                Things to Avoid: <br/>\n                <ul>\n                    {details['avoid'].map((e)=><li key={e}>{e}</li>)}\n                </ul>\n            </div>;\n        }\n        var medHistory=disList.map(dis=><li key={dis}>{makeDiseaseDetail(this.state.patientDetails[patId]['medical_history'][dis],dis)}</li>);\n        return <div>\n            Name: {this.state.patientDetails[patId]['name']}<br/>\n            Age: {this.state.patientDetails[patId]['age']}<br/>\n            Blood Group: {this.state.patientDetails[patId]['blood_group']}<br/>\n            Medical History:<br/>\n            <ul>\n                {medHistory}\n            </ul>\n            Current Medications: <br/>\n            <Disease currentDiseases={this.state.patientDetails[patId]['current_medications']}\n                addDisease={this.addDisease.bind(this)}\n                removeDisease={this.removeDisease.bind(this)}\n                addMedication={this.addMedication.bind(this)}\n                removeMedication={this.removeMedication.bind(this)}\n                addAvoid={this.addAvoid.bind(this)}\n                removeAvoid={this.removeAvoid.bind(this)}\n            />\n        </div>\n    }\n    sendData(e){\n        e.preventDefault();\n        fetch('http://localhost:5000/send_patient_data/',{\n            method: 'POST',\n            credentails: 'include',\n            body: JSON.stringify(this.state.patientDetails)\n        })\n        .then(e=>e.json())\n        .then(e=>{\n            console.log(e);\n        })\n    }\n    render(){\n        var patientIds=[];\n        /*\n            data is of the form:\n            data: [patid(email add): {\n                    medical_history: [disease1:{\n                            medications: [med1,med2,med3].\n                            avoid: [av1,av2,av3]\n                        },\n                        disease2: {\n                            medicatiosn: [med1,med2,med3],\n                            avoid: [av1,av2,av3]\n                        }\n                    ],\n                    current_medications: [disease1: {\n                            medications: [],\n                            avoid: []\n                        },\n                        disease2: {\n                            medications: [],\n                            avoid: []\n                        },\n                    ]\n                },\n                patid: ...,\n                patid: ...\n            ]\n        */\n        for(var key in this.state.patientDetails){\n            patientIds.push(key);\n        }\n        var patientButtons=patientIds.map(id=><button key={id} onClick={this.showPatientDetails.bind(this)} className='PatientIdButton'>{id}</button>);\n        patientButtons=<ul>{patientButtons}</ul>\n        return <div>\n            {patientButtons}\n            <div style={{display: (this.state.showPatientCard && 'block') || 'none'}}>\n                {this.getPatientCard(this.state.patientId)}\n            </div>\n            <button onClick={this.sendData.bind(this)}>Update Data</button>\n        </div>;\n    }\n}\nexport default DocForm;\n","/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/components/doc_form_page/Disease.js",["53","54"],"import React from 'react';\nimport Container from './Container';\n\nclass Disease extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            medications: [],\n            avoid: []\n        }\n    }\n    addDisease(event){\n        event.preventDefault();\n        var disObj={}\n        disObj['name']=document.querySelector('input[name=new_disease]').value;\n        disObj['medications']=this.state.medications;\n        disObj['avoid']=this.state.avoid;\n        this.setState({\n            medications: [],\n            avoid: []\n        });\n        this.props.addDisease(disObj);\n    }\n    addMedication(diseaseName,medicine){\n        console.log('Disease.js: addMedication(): ',medicine)\n        var list=this.state.medications;\n        list.push(medicine);\n        this.setState({\n            medications: list\n        });\n    }\n    addAvoid(diseaseName,avoid){\n        var list=this.state.avoid;\n        list.push(avoid);\n        this.setState({\n            avoid: list\n        });\n    }\n    removeMedication(medication){\n        var list=[];\n        for(var i=0;i<this.state.medications.length;i++){\n            if(this.state.medications[i]!=medication){\n                list.push(this.state.medications[i]);\n            }\n        }\n        this.setState({\n            medications: list\n        });\n    }\n    removeAvoid(avoid){\n        var list=[];\n        for(var i in this.state.avoid.length){\n            if(this.state.avoid[i]!=avoid){\n                list.push(this.state.avoid[i]);\n            }\n        }\n        this.setState({\n            avoid: list\n        });\n    }\n    getDiseasesComponent(){\n        var diseaseList=[];\n        for(var key in this.props.currentDiseases){\n            diseaseList.push(key);\n        }\n        console.log(diseaseList);\n        return <ul>{diseaseList.map((dis)=><li key={dis}>\n                {dis}<br/>\n                Medications: \n                <Container type='medication' addElm={this.props.addMedication} diseaseName={dis} removeElm={this.props.removeMedication} list={this.props.currentDiseases[dis]['medications']}/>\n                Avoid: \n                <Container type='avoid' addElm={this.props.addAvoid} diseaseName={dis} removeElm={this.props.removeAvoid} list={this.props.currentDiseases[dis]['avoid']}/>\n            </li>)}\n            Disease Name: <input type='text' name='new_disease'/><br/>\n            Medications: \n            <Container type='new_medication' addElm={this.addMedication.bind(this)} removeElm={this.removeMedication.bind(this)} list={this.state.medications}/>\n            Avoid: \n            <Container type='new_avoid' addElm={this.addAvoid.bind(this)} removeElm={this.removeAvoid.bind(this)} list={this.state.avoid}/>\n            <button onClick={this.addDisease.bind(this)}>Add Disease</button>\n        </ul>;\n    }\n    render(){\n        return this.getDiseasesComponent();\n    }\n}\nexport default Disease;","/home/shayak/Desktop/MyPrograms/GroupProject/my-app/src/components/doc_form_page/Container.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":12},{"ruleId":"59","severity":1,"message":"63","line":9,"column":3,"nodeType":"61","messageId":"62","endLine":9,"endColumn":7},{"ruleId":"59","severity":1,"message":"64","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":13},{"ruleId":"65","severity":1,"message":"66","line":5,"column":5,"nodeType":"67","messageId":"68","endLine":7,"endColumn":6},{"ruleId":"59","severity":1,"message":"69","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":70,"column":23,"nodeType":"72","messageId":"73","endLine":70,"endColumn":25},{"ruleId":"70","severity":1,"message":"71","line":91,"column":23,"nodeType":"72","messageId":"73","endLine":91,"endColumn":25},{"ruleId":"70","severity":1,"message":"71","line":42,"column":41,"nodeType":"72","messageId":"73","endLine":42,"endColumn":43},{"ruleId":"70","severity":1,"message":"71","line":53,"column":35,"nodeType":"72","messageId":"73","endLine":53,"endColumn":37},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'axios' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Container' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]